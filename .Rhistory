ggline(dfK, x=k, y=vk)
ggline(dfK, x=K, y=vk)
dfK<-data.frame(K=1:100, vK )
dfK
ggline(dfK, x=dfK$K, y=vk)
ggline(dfK, x=dfK$K, y=dfK$vK)
ggline(dfK, dfK$K, dfK$vK)
ggline(dfK, dfK$K, dfK$vK)
str(dfK)
ggline(dfK, as.numeric(dfK$K), dfK$vK)
ggline(dfK, x='K', y='vK')
ggplot(dfK, aes(K, vK)) + geom_line()
ggplot(dfK, aes(K, vK)) + geom_line() + +theme_bw() + theme(legend.position = "none",axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22))
ggplot(dfK, aes(K, vK)) + geom_line() + +theme_bw() + theme(legend.position = "none",axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22))
ggplot(dfK, aes(K, vK)) + geom_line() + +theme_bw() + theme_bw() +
theme(legend.position = "none",axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22))
ggplot(dfK, aes(K, vK)) + geom_line() + theme_bw()+
theme(axis.title.x=element_text(size = 22), axis.title.y = element_text(size = 22))
ggplot(dfK, aes(K, vK)) + geom_line() + theme_bw()+
theme(axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22)) + labs(x='Número de comparaciones')
ggplot(dfK, aes(K, vK)) + geom_line() + theme_bw()+
theme(axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22)) + labs(x='Número de comparaciones',
y='Probabilidad de error')
ggplot(dfK, aes(K, vK)) + geom_line() + theme_bw()+
theme(axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22)) + labs(x='Número de comparaciones',
y='Probabilidad de error') +
scale_x_continuous()
each(10)
ggplot(dfK, aes(K, vK)) + geom_line() + theme_bw()+
theme(axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22)) + labs(x='Número de comparaciones',
y='Probabilidad de error') +
scale_x_continuous(c(0,10,20,30,40,50,60,70,80, 90, 100))
ggplot(dfK, aes(K, vK)) + geom_line() + theme_bw()+
theme(axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22)) + labs(x='Número de comparaciones',
y='Probabilidad de error') +
scale_x_continuous(breaks=c(0,10,20,30,40,50,60,70,80, 90, 100))
ggplot(dfK, aes(K, vK)) + geom_line() + theme_bw()+
theme(axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22)) + labs(x='Número de comparaciones',
y='Probabilidad de error') +
scale_x_continuous(breaks=c(0,10,20,30,40,50,60,70,80, 90, 100)) +
scale_y_continuous(breaks=0:1)
?rep
rep(C(0,1), each=0.1)
rep(0:1, each=0.1)
ggplot(dfK, aes(K, vK)) + geom_line() + theme_bw()+
theme(axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22)) + labs(x='Número de comparaciones',
y='Probabilidad de error') +
scale_x_continuous(breaks=c(0,10,20,30,40,50,60,70,80, 90, 100)) +
scale_y_continuous(breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5,0.6,0.7,0.8,0.9,1))
?geom_text
?annotate
ggplot(dfK, aes(K, vK)) + geom_line() + theme_bw()+
theme(axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22)) + labs(x='Número de comparaciones',
y='Probabilidad de error') +
scale_x_continuous(breaks=c(0,10,20,30,40,50,60,70,80, 90, 100)) +
scale_y_continuous(breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5,0.6,0.7,0.8,0.9,1)) +
annotate('Probabilidad de obtener un falso positivo \n  Nótese que')
ggplot(dfK, aes(K, vK)) + geom_line() + theme_bw()+
theme(axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22)) + labs(x='Número de comparaciones',
y='Probabilidad de error') +
scale_x_continuous(breaks=c(0,10,20,30,40,50,60,70,80, 90, 100)) +
scale_y_continuous(breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5,0.6,0.7,0.8,0.9,1)) + geom_text()+
annotate('Probabilidad de obtener un falso positivo \n  Nótese que')
ggplot(dfK, aes(K, vK)) + geom_line() + theme_bw()+
theme(axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22)) + labs(x='Número de comparaciones',
y='Probabilidad de error') +
scale_x_continuous(breaks=c(0,10,20,30,40,50,60,70,80, 90, 100)) +
scale_y_continuous(breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5,0.6,0.7,0.8,0.9,1)) + geom_text()+
annotate('Probabilidad de obtener un falso positivo \n  Nótese que', x=50, y=0.4)
ggplot(dfK, aes(K, vK)) + geom_line() + theme_bw()+
theme(axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22)) + labs(x='Número de comparaciones',
y='Probabilidad de error') +
scale_x_continuous(breaks=c(0,10,20,30,40,50,60,70,80, 90, 100)) +
scale_y_continuous(breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5,0.6,0.7,0.8,0.9,1)) +
annotate('Probabilidad de obtener un falso positivo \n  Nótese que', x=50, y=0.4)
p <- ggplot(mtcars, aes(x = wt, y = mpg)) + geom_point()
p + annotate("text", x = 4, y = 25, label = "Some text")
ggplot(dfK, aes(K, vK)) + geom_line() + theme_bw()+
theme(axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22)) + labs(x='Número de comparaciones',
y='Probabilidad de error') +
scale_x_continuous(breaks=c(0,10,20,30,40,50,60,70,80, 90, 100)) +
scale_y_continuous(breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5,0.6,0.7,0.8,0.9,1)) +
annotate('text', x=50, y=0.4, label='Probabilidad de obtener un falso positivo Nótese que')
ggplot(dfK, aes(K, vK)) + geom_line() + theme_bw()+
theme(axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22)) + labs(x='Número de comparaciones',
y='Probabilidad de error') +
scale_x_continuous(breaks=c(0,10,20,30,40,50,60,70,80, 90, 100)) +
scale_y_continuous(breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5,0.6,0.7,0.8,0.9,1)) +
annotate('text', x=50, y=0.4, label='Probabilidad de obtener un falso positivo \nNótese que')
ggplot(dfK, aes(K, vK)) + geom_line() + theme_bw()+
theme(axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22)) + labs(x='Número de comparaciones',
y='Probabilidad de error') +
scale_x_continuous(breaks=c(0,10,20,30,40,50,60,70,80, 90, 100)) +
scale_y_continuous(breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5,0.6,0.7,0.8,0.9,1)) +
annotate('text', x=50, y=0.4, label='Probabilidad de obtener un falso positivo \n Nótese que con 60 la Pr es cercana al 95%')
ggplot(dfK, aes(K, vK)) + geom_line() + theme_bw()+
theme(axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22)) + labs(x='Número de comparaciones',
y='Probabilidad de error') +
scale_x_continuous(breaks=c(0,10,20,30,40,50,60,70,80, 90, 100)) +
scale_y_continuous(breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5,0.6,0.7,0.8,0.9,1)) +
annotate('text', x=50, y=0.4, label='Probabilidad de obtener un falso positivo
\n Nótese que con 60 la Pr es cercana al 95%', colour='bluelight')
ggplot(dfK, aes(K, vK)) + geom_line() + theme_bw()+
theme(axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22)) + labs(x='Número de comparaciones',
y='Probabilidad de error') +
scale_x_continuous(breaks=c(0,10,20,30,40,50,60,70,80, 90, 100)) +
scale_y_continuous(breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5,0.6,0.7,0.8,0.9,1)) +
annotate('text', x=50, y=0.4, label='Probabilidad de obtener un falso positivo
\n Nótese que con 60 la Pr es cercana al 95%', colour=bluelight)
ggplot(dfK, aes(K, vK)) + geom_line() + theme_bw()+
theme(axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22)) + labs(x='Número de comparaciones',
y='Probabilidad de error') +
scale_x_continuous(breaks=c(0,10,20,30,40,50,60,70,80, 90, 100)) +
scale_y_continuous(breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5,0.6,0.7,0.8,0.9,1)) +
annotate('text', x=50, y=0.4, label='Probabilidad de obtener un falso positivo
\n Nótese que con 60 la Pr es cercana al 95%', colour='blue')
ggplot(dfK, aes(K, vK)) + geom_line() + theme_bw()+
theme(axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22)) + labs(x='Número de comparaciones',
y='Probabilidad de error') +
scale_x_continuous(breaks=c(0,10,20,30,40,50,60,70,80, 90, 100)) +
scale_y_continuous(breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5,0.6,0.7,0.8,0.9,1)) +
annotate('text', x=50, y=0.4, label='Probabilidad de obtener un falso positivo
\n Nótese que con 60 la Pr es cercana al 95%', colour='blue', size=6)
ggplot(dfK, aes(K, vK)) + geom_line() + theme_bw()+
theme(axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22)) + labs(x='Número de comparaciones',
y='Probabilidad de error') +
scale_x_continuous(breaks=c(0,10,20,30,40,50,60,70,80, 90, 100)) +
scale_y_continuous(breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5,0.6,0.7,0.8,0.9,1)) +
annotate('text', x=50, y=0.4, label='Probabilidad de obtener un falso positivo
\n Nótese que con 60 la Pr es cercana al 95%', colour='blue', size=3)
ggplot(dfK, aes(K, vK)) + geom_line() + theme_bw()+
theme(axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22)) + labs(x='Número de comparaciones',
y='Probabilidad de error') +
scale_x_continuous(breaks=c(0,10,20,30,40,50,60,70,80, 90, 100)) +
scale_y_continuous(breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5,0.6,0.7,0.8,0.9,1)) +
annotate('text', x=50, y=0.4, label='Probabilidad de obtener un falso positivo
\n Nótese que con 60 la Pr es cercana al 95%', colour='blue', size=4)
ggplot(dfK, aes(K, vK)) + geom_line() + theme_bw()+
theme(axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22)) + labs(x='Número de comparaciones',
y='Probabilidad de error') +
scale_x_continuous(breaks=c(0,10,20,30,40,50,60,70,80, 90, 100)) +
scale_y_continuous(breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5,0.6,0.7,0.8,0.9,1)) +
annotate('text', x=50, y=0.4, label='Probabilidad de obtener un falso positivo
\n Nótese que con 60 la Pr es cercana al 95%', colour='blue', size=6)
ggplot(dfK, aes(K, vK)) + geom_line() + theme_bw()+
theme(axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22)) + labs(x='Número de comparaciones',
y='Probabilidad de error') +
scale_x_continuous(breaks=c(0,10,20,30,40,50,60,70,80, 90, 100)) +
scale_y_continuous(breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5,0.6,0.7,0.8,0.9,1)) +
annotate('text', x=70, y=0.4, label='Probabilidad de obtener un falso positivo
\n Nótese que con 60 la Pr es cercana al 95%', colour='blue', size=6)
vK<- sapply(0:100, function(x) 1-(0.95)^x)
dfK<-data.frame(K=1:100, vK )
ggline(dfK, x='K', y='vK')
vK<- sapply(0:100, function(x) 1-(0.95)^x)
dfK<-data.frame(K=0:100, vK )
ggline(dfK, x='K', y='vK')
ggplot(dfK, aes(K, vK)) + geom_line() + theme_bw()+
theme(axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22)) + labs(x='Número de comparaciones',
y='Probabilidad de error') +
scale_x_continuous(breaks=c(0,10,20,30,40,50,60,70,80, 90, 100)) +
scale_y_continuous(breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5,0.6,0.7,0.8,0.9,1)) +
annotate('text', x=70, y=0.4, label='Probabilidad de obtener un falso positivo
\n Nótese que con 60 la Pr es cercana al 95%', colour='blue', size=6)
vK<- sapply(0:100, function(x) 1-(0.95)^x)
dfK<-data.frame(K=0:100, vK )
ggline(dfK, x='K', y='vK')
ggplot(dfK, aes(K, vK)) + geom_line() + theme_bw()+
theme(axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22)) + labs(x='Número de comparaciones',                                                  y='Probabilidad de error') +
scale_x_continuous(breaks=c(0,10,20,30,40,50,60,70,80, 90, 100)) +
scale_y_continuous(breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5,0.6,0.7,0.8,0.9,1)) +
annotate('text', x=70, y=0.4, label='Probabilidad de obtener un falso positivo
\n Nótese que con 60 la Pr es cercana al 95%', colour='blue', size=6)
vK<- sapply(0:100, function(x) 1-(0.95)^x)
dfK<-data.frame(K=0:100, vK )
ggline(dfK, x='K', y='vK')
ggplot(dfK, aes(K, vK)) + geom_line() + theme_bw()+
theme(axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22)) + labs(x='Número de comparaciones',                                                  y='Probabilidad de error') +
scale_x_continuous(breaks=c(0,10,20,30,40,50,60,70,80, 90, 100)) +
scale_y_continuous(breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5,0.6,0.7,0.8,0.9,1)) +
annotate('text', x=70, y=0.4, label='Probabilidad de obtener un falso positivo
\n Nótese que con 60 la Pr es cercana al 95%', colour='blue', size=6)
vK<- sapply(0:100, function(x) 1-(0.95)^x)
dfK<-data.frame(K=0:100, vK )
ggplot(dfK, aes(K, vK)) + geom_line() + theme_bw()+
theme(axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22)) + labs(x='Número de comparaciones',                                                  y='Probabilidad de error') +
scale_x_continuous(breaks=c(0,10,20,30,40,50,60,70,80, 90, 100)) +
scale_y_continuous(breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5,0.6,0.7,0.8,0.9,1)) +
annotate('text', x=70, y=0.4, label='Probabilidad de obtener un falso positivo
\n Nótese que con 60 la Pr es cercana al 95%', colour='blue', size=6)
require(ggplot2)
vK<- sapply(0:100, function(x) 1-(0.95)^x)
dfK<-data.frame(K=0:100, vK )
ggplot(dfK, aes(K, vK)) + geom_line() + theme_bw()+
theme(axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22)) + labs(x='Número de comparaciones',                                                  y='Probabilidad de error') +
scale_x_continuous(breaks=c(0,10,20,30,40,50,60,70,80, 90, 100)) +
scale_y_continuous(breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5,0.6,0.7,0.8,0.9,1)) +
annotate('text', x=70, y=0.4, label='Probabilidad de obtener un falso positivo
\n Nótese que con 60 la Pr es cercana al 95%', colour='blue', size=6)
library("slidify", lib.loc="~/R/win-library/3.4")
library("slidifyLibraries", lib.loc="~/R/win-library/3.4")
ggplot(dfK, aes(K, vK)) + geom_line() + theme_bw()+
theme(axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22)) + labs(x='Número de comparaciones',
y='Probabilidad de error') +
scale_x_continuous(breaks=c(0,10,20,30,40,50,60,70,80, 90, 100)) +
scale_y_continuous(breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5,0.6,0.7,0.8,0.9,1)) +
annotate('text', x=70, y=0.4, label='Probabilidad de obtener un falso positivo
\n Nótese que con 60 la Pr es cercana al 95%', colour='blue', size=6)
library("ggplot2", lib.loc="~/R/win-library/3.4")
vK<- sapply(0:100, function(x) 1-(0.95)^x)
dfK<-data.frame(K=0:100, vK )
ggline(dfK, x='K', y='vK')
ggplot(dfK, aes(K, vK)) + geom_line() + theme_bw()+
theme(axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22)) + labs(x='Número de comparaciones',
y='Probabilidad de error') +
scale_x_continuous(breaks=c(0,10,20,30,40,50,60,70,80, 90, 100)) +
scale_y_continuous(breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5,0.6,0.7,0.8,0.9,1)) +
annotate('text', x=70, y=0.4, label='Probabilidad de obtener un falso positivo
\n Nótese que con 60 la Pr es cercana al 95%', colour='blue', size=6)
modL<-lm(UFC~Tratamiento, wdata2)
wdata2 = data.frame(
Tratamiento = factor(rep(c("Nada", "Hongos", 'Solarizada', 'Basamid'), each=200)),
UFC = c(rnorm(5, 4), rnorm(5, 8), rnorm(5, 4), rnorm(5, 3.5)))
modL<-lm(UFC~Tratamiento, wdata2)
wdata2 = data.frame(
Tratamiento = factor(rep(c("Nada", "Hongos", 'Solarizada', 'Basamid'), each=200)),
UFC = c(rnorm(5, 4), rnorm(5, 8), rnorm(5, 4), rnorm(5, 3.5)))
modL<-lm(UFC~Tratamiento, wdata2)
kable(anova(mod<-lm(UFC~Tratamiento, data=wdata2)), digits = 3)
ggplot(wdata4, aes(Tratamiento, UFC)) +
geom_boxplot(aes(fill = Tratamiento))  +
geom_jitter(position = position_jitter(width = .15), alpha=0.3, size=2) +
xlab("Tratamiento") +
ylab("Log(UFC/g)") +theme_bw() + theme(legend.position = "none",axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22))
wdata4 = data.frame(
Tratamiento = factor(rep(c("Nada", "Hongos", 'Solarizada', 'Basamid'), each=5)),
UFC = c(rnorm(5, 4), rnorm(5, 7), rnorm(5, 4), rnorm(5, 2)))
ggplot(wdata4, aes(Tratamiento, UFC)) +
geom_boxplot(aes(fill = Tratamiento))  +
geom_jitter(position = position_jitter(width = .15), alpha=0.3, size=2) +
xlab("Tratamiento") +
ylab("Log(UFC/g)") +theme_bw() + theme(legend.position = "none",axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22))
kable(anova(mod<-lm(UFC~Tratamiento, data=wdata4)), digits = 3)
wdata2 = data.frame(
Tratamiento = factor(rep(c("Nada", "Hongos", 'Solarizada', 'Basamid'), each=200)),
UFC = c(rnorm(200, 4), rnorm(200, 8), rnorm(200, 4), rnorm(200, 3.5)))
modS<-lm(UFC~Tratamiento)
modS<-lm(UFC~Tratamiento, data=wdata2)
library("agricolae", lib.loc="~/R/win-library/3.4")
HSD.test(modS,'UFC')
HSD.test(modS,'UFC', console=T)
wdata2 = data.frame(
Tratamiento = factor(rep(c("Nada", "Hongos", 'Solarizada', 'Basamid'), each=5)),
UFC = c(rnorm(5, 4), rnorm(5, 8), rnorm(5, 4), rnorm(5, 3.5)))
modS<-lm(UFC~Tratamiento, data=wdata2)
HSD.test(modS,'UFC', console=T)
HSD.test(modS,'Tratamient', console=T)
HSD.test(modS,'Tratamiento', console=T)
p<-HSD.test(modS,'Tratamiento')
str(p)
?HSD.test
print(p)
print(p$comparison)
modS<-lm(UFC~Tratamiento, data=wdata2)
p<-HSD.test(modS,'Tratamiento')
print(p$comparison)
p<-HSD.test(modS,'Tratamiento', console = T)
p<-HSD.test(modS,'Tratamiento', console = T, group = T)
HSD.test(modS,'Tratamiento', console = T, group = T)
HSD.test(modS,'Tratamiento', group = T)
pp<-HSD.test(modS,'Tratamiento', group = T)
pp
pp<-HSD.test(modS,'Tratamiento', comparision = T)
pp<-HSD.test(modS,'Tratamiento')
print(pp)
pp$statistics
pp$groups
pp$comparison
pp<-HSD.test(modS,'Tratamiento', console = T)
pp<-HSD.test(modS,'Tratamiento', group  = T)
print(pp)
pp<-HSD.test(modS,'Tratamiento', group  = F)
print(pp)
pp$comparison
pp<-HSD.test(modS,'Tratamiento', group  = T)
print(pp)
install.packages("multcomp")
?reorder
wdata4 = data.frame(
Tratamiento = factor(rep(c("Nada", "Hongos", 'Solarizada', 'Basamid'), each=5)),
UFC = c(rnorm(5, 4), rnorm(5, 7), rnorm(5, 4), rnorm(5, 2)))
wdata4$Tratamiento<-factor(wdata4, levels = c('Nada','Hongos','Basamid','Solarizada'))
ggplot(wdata4, aes(Tratamiento, UFC)) +
geom_boxplot(aes(fill = Tratamiento))  +
geom_jitter(position = position_jitter(width = .15), alpha=0.3, size=2) +
xlab("Tratamiento") +
ylab("Log(UFC/g)") +theme_bw() + theme(legend.position = "none",axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22))
wdata4 = data.frame(
Tratamiento = factor(rep(c("Nada", "Hongos", 'Solarizada', 'Basamid'), each=5)),
UFC = c(rnorm(5, 4), rnorm(5, 7), rnorm(5, 4), rnorm(5, 2)))
levels(Tratamiento)
wdata4 = data.frame(
Tratamiento = factor(rep(c("Nada", "Hongos", 'Solarizada', 'Basamid'), each=5)),
UFC = c(rnorm(5, 4), rnorm(5, 7), rnorm(5, 4), rnorm(5, 2)))
ggplot(wdata4, aes(Tratamiento, UFC)) +
geom_boxplot(aes(fill = Tratamiento))  +
geom_jitter(position = position_jitter(width = .15), alpha=0.3, size=2) +
xlab("Tratamiento") +
ylab("Log(UFC/g)") +theme_bw() + theme(legend.position = "none",axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22))
wdata4 = data.frame(
Tratamiento = factor(rep(c("Nada", "Hongos", 'Solarizada', 'Basamid'), each=5)),
UFC = c(rnorm(5, 4), rnorm(5, 7), rnorm(5, 4), rnorm(5, 2)))
wdata4$Tratamiento<-factor(wdata4$Tratamiento, levels = c('Nada','Hongos','Basamid','Solarizada'))
ggplot(wdata4, aes(Tratamiento, UFC)) +
geom_boxplot(aes(fill = Tratamiento))  +
geom_jitter(position = position_jitter(width = .15), alpha=0.3, size=2) +
xlab("Tratamiento") +
ylab("Log(UFC/g)") +theme_bw() + theme(legend.position = "none",axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22))
setwd("C:/Users/Administrador/Desktop/Rsession")
setwd("C:/Users/Administrador/Desktop/Rsession")
setwd("C:/Users/W/Desktop/DOE")
datos<-read.csv('2014-08-12 Anova unifactorial.csv',header=T,sep=',')
View(datos)
attach(datos)
library(car)
library(multcomp)
library(multcomp)
library(agricolae)
library(ggplot2)
View(datos)
ggplot(datos, aes(tto,resp )) +
geom_boxplot(aes(fill = x))  +
geom_jitter(position = position_jitter(width = .15), alpha=0.3, size=2) +
xlab("NombreX") +
ylab("NombreY") +theme_bw() + theme(legend.position = "none",axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22))
ggplot(datos, aes(tto,resp ))
ggplot(datos, aes(tto,resp ))
geom_boxplot(aes(fill = tto))  +
geom_jitter(position = position_jitter(width = .15), alpha=0.3, size=2) +
xlab("NombreX") +
ylab("NombreY") +theme_bw() + theme(legend.position = "none",axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22))
View(datos)
ggplot(datos, aes(tto,resp ))
geom_boxplot(aes(fill = tto))
datos<-read.csv('2014-08-12 Anova unifactorial.csv',header=T,sep=',')
attach(datos)
ggplot(datos, aes(tto,resp ))
geom_boxplot(aes(fill = tto))
ggplot(datos, aes(tto,resp ))
geom_boxplot(aes(fill= tto))
# Análisis exploratorio: Boxplot superpuesto con stripchart
ggplot(datos, aes(tto,resp ))
geom_boxplot(aes(fill= tto))  +
geom_jitter(position = position_jitter(width = .15), alpha=0.3, size=2) +
xlab("NombreX") +
ylab("NombreY") +theme_bw() + theme(legend.position = "none",axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22))
View(datos)
str(datos)
datos<-read.csv('2014-08-12 Anova unifactorial.csv',header=T,sep=',')
attach(datos)
ggplot(datos, aes(tto,resp ))
ggplot(datos, aes(tto,resp )) +
geom_boxplot(aes(fill= tto))  +
geom_jitter(position = position_jitter(width = .15), alpha=0.3, size=2) +
xlab("NombreX") +
ylab("NombreY") +theme_bw() + theme(legend.position = "none",axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22))
modelo1<-lm(resp~tto)
plot(modelo1)
HSD.test(modelo1,"X", group=TRUE,console=T)
HSD.test(modelo1,"tto", group=TRUE,console=T)
summary(glht(modelo1,linfct=mcp(X="Dunnett")))
summary(glht(modelo1,linfct=mcp(tto="Dunnett")))
LSD.test(modelo1,"tto",p.adj="bon",console=TRUE)
HSD.test(modelo1,"tto", group=TRUE,console=T)
anova(modelo1)
shapiro.test(modelo1$residuals)
leveneTest(modelo1)
anova(modelo1)
setwd("C:/Users/W/Desktop/DOE")
setwd("C:/Users/W/Desktop/DOE")
library(readr)
X2014_09_02_uniFactorial <- read_csv("C:/Users/W/Desktop/DOE/2014-09-02 uniFactorial.csv")
View(X2014_09_02_uniFactorial)
datos<-read.csv('2014-08-12 Anova unifactorial.csv',header=T,sep=';')
View(datos)
datos<-read.csv('2014-09-02 uniFactorial.csv',header=T,sep=';')
View(datos)
ggplot(datos, aes(tratamiento,severidad )) +
geom_boxplot(aes(fill= tto))  +
geom_jitter(position = position_jitter(width = .15), alpha=0.3, size=2) +
xlab("NombreX") +
ylab("NombreY") +theme_bw() + theme(legend.position = "none",axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22))
ggplot(datos, aes(tratamiento,severidad )) +
geom_boxplot(aes(fill= tratamiento))  +
geom_jitter(position = position_jitter(width = .15), alpha=0.3, size=2) +
xlab("NombreX") +
ylab("NombreY") +theme_bw() + theme(legend.position = "none",axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22))
ggplot(datos, aes(Tratamiento,Severidad )) +
geom_boxplot(aes(fill= Tratamiento))  +
geom_jitter(position = position_jitter(width = .15), alpha=0.3, size=2) +
xlab("NombreX") +
ylab("NombreY") +theme_bw() + theme(legend.position = "none",axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22))
modelo1<-lm(Severidad~Tratamiento)
modelo1<-lm(Severidad~Tratamiento)
modelo1<-lm(Severidad~Tratamiento)
View(datos)
modelo1<-lm(Severidad~Tratamiento)
attach(datos)
modelo1<-lm(Severidad~Tratamiento)
plot(modelo1)
plot(modelo1)
modelo1<-lm(Severidad~Tratamiento)
modelo1<-lm(Severidad~Tratamiento)
modelo1<-lm(Severidad~Tratamiento)
plot(modelo1)
geom_jitter(position = position_jitter(width = .15), alpha=0.3, size=2) +
xlab("NombreX") +
ylab("NombreY") +theme_bw() + theme(legend.position = "none",axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22))
modelo1<-lm(Severidad~Tratamiento)
attach(datos)
datos<-read.csv('2014-09-02 uniFactorial.csv',header=T,sep=';')
ggplot(datos, aes(Tratamiento,Severidad )) +
geom_boxplot(aes(fill= Tratamiento))  +
geom_jitter(position = position_jitter(width = .15), alpha=0.3, size=2) +
xlab("NombreX") +
ylab("NombreY") +theme_bw() + theme(legend.position = "none",axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22))
modelo1<-lm(Severidad~Tratamiento)
plot(modelo1)
plot(modelo1)
shapiro.test(modelo1$residuals)
shapiro.test(modelo1$residuals)
leveneTest(modelo1)
anova(modelo1)
anova(modelo1)
anova(modelo1)
HSD.test(modelo1,"tto", group=TRUE,console=T)
HSD.test(modelo1,"tto", group=TRUE,console=T)
HSD.test(modelo1,"Tratamiento", group=TRUE,console=T)
summary(glht(modelo1,linfct=mcp(tto="Dunnett")))
LSD.test(modelo1,"Tratamiento",p.adj="bon",console=TRUE)
summary(glht(modelo1,linfct=mcp(Tratamiento="Dunnett")))
HSD.test(modelo1,"Tratamiento", group=TRUE,console=T)
HSD.test(modelo1,"Tratamiento", group=F,console=T)
summary(glht(modelo1,linfct=mcp(Tratamiento="Dunnett")))
datos<-read.csv('2014-09-02 uniFactorial.csv',header=T,sep=';')
attach(datos)
library(car)
library(multcomp)
library(agricolae)
library(ggplot2)
ggplot(datos, aes(Tratamiento,Severidad )) +
geom_boxplot(aes(fill= Tratamiento))  +
geom_jitter(position = position_jitter(width = .15), alpha=0.3, size=2) +
xlab("NombreX") +
ylab("NombreY") +theme_bw() + theme(legend.position = "none",axis.title.x=element_text(size = 22),
axis.title.y = element_text(size = 22))
modelo1<-lm(Severidad~Tratamiento)
plot(modelo1)
summary(glht(modelo1,linfct=mcp(Tratamiento="Dunnett")))
LSD.test(modelo1,"Tratamiento",p.adj="bon",console=TRUE)
anova(modelo1)
shapiro.test(modelo1$residuals)
leveneTest(modelo1)
HSD.test(modelo1,"Tratamiento", group=F,console=T)
summary(glht(modelo1,linfct=mcp(Tratamiento="Dunnett")))
LSD.test(modelo1,"Tratamiento",p.adj="bon",console=TRUE)
